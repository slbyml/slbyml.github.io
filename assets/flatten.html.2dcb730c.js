import{_ as n,o as s,c as a,e as t}from"./app.fded88d1.js";const p={},o=t(`<h1 id="javascript-\u6570\u7EC4\u5C55\u5F00-\u6241\u5E73\u5316-\u548Cunderscore\u7684-flatten" tabindex="-1"><a class="header-anchor" href="#javascript-\u6570\u7EC4\u5C55\u5F00-\u6241\u5E73\u5316-\u548Cunderscore\u7684-flatten" aria-hidden="true">#</a> JavaScript \u6570\u7EC4\u5C55\u5F00(\u6241\u5E73\u5316)\u548Cunderscore\u7684 flatten</h1><p>\u6570\u7EC4\u5C55\u5F00\u5C31\u662F\u5C06\u5D4C\u5957\u7684\u6570\u7EC4\u6241\u5E73\u5316\uFF08\u8F6C\u6362\u4E3A\u4E00\u7EF4\u7684\uFF09eg:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> arr<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">=&gt;</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span> 
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">flatten</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment">//[1,2,1,2,3,1,2]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_1\u3001\u5224\u65AD\u6BCF\u4E00\u9879\u662F\u5426\u662F\u6570\u7EC4-\u7136\u540E\u9012\u5F52" tabindex="-1"><a class="header-anchor" href="#_1\u3001\u5224\u65AD\u6BCF\u4E00\u9879\u662F\u5426\u662F\u6570\u7EC4-\u7136\u540E\u9012\u5F52" aria-hidden="true">#</a> 1\u3001\u5224\u65AD\u6BCF\u4E00\u9879\u662F\u5426\u662F\u6570\u7EC4\uFF0C\u7136\u540E\u9012\u5F52</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> arr<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span><span class="token string">&quot;a&quot;</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span><span class="token string">&quot;a&quot;</span><span class="token punctuation">]</span><span class="token punctuation">]</span>
<span class="token keyword">function</span> <span class="token function">flatten</span><span class="token punctuation">(</span><span class="token parameter">arr</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">let</span> result<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span>
    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span>l<span class="token operator">=</span>arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span>i<span class="token operator">&lt;</span>l<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token comment">//\u9012\u5F52\u8C03\u7528</span>
            result<span class="token operator">=</span>result<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span><span class="token function">flatten</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  
        <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
            result<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> result
<span class="token punctuation">}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">flatten</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">,</span>arr<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2\u3001tostring" tabindex="-1"><a class="header-anchor" href="#_2\u3001tostring" aria-hidden="true">#</a> 2\u3001toString</h2><p>\u6570\u7EC4\u5728\u8C03\u7528toString()\u4F1A\u5C06\u6570\u7EC4\u8F6C\u6362\u6210<code>&quot;1,2,1,2,3,1,2&quot;</code>,\u518D\u6267\u884C<code>split(&quot;,&quot;)</code>\u65B9\u6CD5\u4F1A\u53D8\u6210<code>[&quot;1&quot;, &quot;2&quot;, &quot;1&quot;, &quot;2&quot;, &quot;3&quot;, &quot;1&quot;, &quot;2&quot;]</code> \u8FD8\u9700\u8981\u5C06\u6240\u6709\u7684\u53C2\u6570\u8F6C\u6362\u4E3A\u6570\u5B57\uFF0C\u6240\u4EE5\u8FD9\u79CD\u65B9\u5F0F\u7684\u4E0D\u8DB3\u5C31\u662F\u5982\u679C\u6570\u7EC4\u91CC\u9762\u662F<code>[1,2,3,&quot;4&quot;,&quot;5&quot;]</code>\u65E2\u6709\u6570\u5B57\u53C8\u6709\u5B57\u7B26\u4E32\uFF0C\u4F1A<code>\u5168\u90E8\u5C55\u5F00\u4E3A\u6570\u5B57</code></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> arr<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">]</span>
<span class="token keyword">function</span> <span class="token function">flatten</span><span class="token punctuation">(</span><span class="token parameter">arr</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">return</span> arr<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&quot;,&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token comment">//\u8F6C\u4E3A\u6570\u5B57</span>
        <span class="token keyword">return</span> <span class="token operator">+</span>item
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">flatten</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">,</span>arr<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_3\u3001reduce\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#_3\u3001reduce\u65B9\u6CD5" aria-hidden="true">#</a> 3\u3001reduce\u65B9\u6CD5</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> arr<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span><span class="token string">&quot;a&quot;</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span><span class="token string">&quot;b&quot;</span><span class="token punctuation">]</span><span class="token punctuation">]</span>
<span class="token keyword">function</span> <span class="token function">flatten</span><span class="token punctuation">(</span><span class="token parameter">arr</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">return</span> arr<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">pre<span class="token punctuation">,</span>next</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> pre<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>next<span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token function">flatten</span><span class="token punctuation">(</span>next<span class="token punctuation">)</span> <span class="token operator">:</span> next<span class="token punctuation">)</span>  <span class="token comment">//\u5982\u679C\u662F\u6570\u7EC4\u540C\u6837\u7684\u9012\u5F52\u8C03\u7528</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">flatten</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">,</span>arr<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_4\u3001\u89E3\u6784\u7684\u65B9\u5F0F" tabindex="-1"><a class="header-anchor" href="#_4\u3001\u89E3\u6784\u7684\u65B9\u5F0F" aria-hidden="true">#</a> 4\u3001\u89E3\u6784\u7684\u65B9\u5F0F</h2><p>\u5229\u7528es6\u65B0\u589E\u7ED3\u6784\u65B9\u6CD5\u53EF\u4EE5\u63D0\u53D6\u4E00\u5C42\u7684\u65B9\u6CD5\uFF0C\u6765\u4E00\u5C42\u5C42\u63D0\u53D6\u51FA\u6765</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> arr<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span><span class="token string">&quot;a&quot;</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span><span class="token string">&quot;b&quot;</span><span class="token punctuation">]</span><span class="token punctuation">]</span>
<span class="token keyword">function</span> <span class="token function">flatten</span><span class="token punctuation">(</span><span class="token parameter">arr</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">while</span><span class="token punctuation">(</span>arr<span class="token punctuation">.</span><span class="token function">some</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=&gt;</span> Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token comment">//\u5982\u679C\u5F53\u524D\u6570\u7EC4\u4E2D\u8FD8\u6709\u6570\u7EC4\uFF0C\u5219\u5C55\u5F00</span>
        arr<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span><span class="token operator">...</span>arr<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> arr
<span class="token punctuation">}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">flatten</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">,</span>arr<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_5\u3001js\u539F\u751F\u65B9\u6CD5flat" tabindex="-1"><a class="header-anchor" href="#_5\u3001js\u539F\u751F\u65B9\u6CD5flat" aria-hidden="true">#</a> 5\u3001js\u539F\u751F\u65B9\u6CD5flat</h2><p><code>flat(depth)</code> \u65B9\u6CD5\u4F1A\u6309\u7167\u4E00\u4E2A\u53EF\u6307\u5B9A\u7684\u6DF1\u5EA6\u9012\u5F52\u904D\u5386\u6570\u7EC4\uFF0C\u5E76\u5C06\u6240\u6709\u5143\u7D20\u4E0E\u904D\u5386\u5230\u7684\u5B50\u6570\u7EC4\u4E2D\u7684\u5143\u7D20\u5408\u5E76\u4E3A\u4E00\u4E2A\u65B0\u6570\u7EC4\u8FD4\u56DE\u3002\u53C2\u6570<code>depth</code>\u8868\u793A\u8981\u63D0\u53D6\u5D4C\u5957\u6570\u7EC4\u7684\u7ED3\u6784\u6DF1\u5EA6,\u9ED8\u8BA4\u4E3A1</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> arr<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span><span class="token string">&quot;a&quot;</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span><span class="token string">&quot;b&quot;</span><span class="token punctuation">]</span><span class="token punctuation">]</span>
arr<span class="token punctuation">.</span><span class="token function">flat</span><span class="token punctuation">(</span><span class="token number">Infinity</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_5\u3001\u4E0D\u7528\u9012\u5F52\u3001mdn\u4E0A\u7684\u65B9\u5F0F" tabindex="-1"><a class="header-anchor" href="#_5\u3001\u4E0D\u7528\u9012\u5F52\u3001mdn\u4E0A\u7684\u65B9\u5F0F" aria-hidden="true">#</a> 5\u3001\u4E0D\u7528\u9012\u5F52\u3001MDN\u4E0A\u7684\u65B9\u5F0F</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u4E0D\u4F7F\u7528\u9012\u5F52\uFF0C\u4F7F\u7528 stack \u65E0\u9650\u53CD\u5D4C\u5957\u591A\u5C42\u5D4C\u5957\u6570\u7EC4</span>
<span class="token keyword">function</span> <span class="token function">flatten</span><span class="token punctuation">(</span><span class="token parameter">input</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> stack <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span>input<span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> res <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">while</span> <span class="token punctuation">(</span>stack<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u4F7F\u7528 pop \u4ECE stack \u4E2D\u53D6\u51FA\u5E76\u79FB\u9664\u503C</span>
    <span class="token keyword">const</span> next <span class="token operator">=</span> stack<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>next<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u4F7F\u7528 push \u9001\u56DE\u5185\u5C42\u6570\u7EC4\u4E2D\u7684\u5143\u7D20\uFF0C\u4E0D\u4F1A\u6539\u52A8\u539F\u59CB\u8F93\u5165 original input</span>
      stack<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token operator">...</span>next<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      res<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>next<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// \u4F7F\u7528 reverse \u6062\u590D\u539F\u6570\u7EC4\u7684\u987A\u5E8F</span>
  <span class="token keyword">return</span> res<span class="token punctuation">.</span><span class="token function">reverse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_6\u3001underscore-js\u7684flatten\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#_6\u3001underscore-js\u7684flatten\u65B9\u6CD5" aria-hidden="true">#</a> 6\u3001Underscore.js\u7684flatten\u65B9\u6CD5</h2><p>\u5148\u4E0A\u4EE3\u7801</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * param <span class="token punctuation">{</span>Array<span class="token punctuation">}</span> input \u8981\u64CD\u4F5C\u7684\u6570\u7EC4
 * param <span class="token punctuation">{</span>Boolean<span class="token punctuation">}</span> shallow \u6D45\u5C55\u5F00\uFF0C\u53CA\u4E3Atrue\u65F6\uFF0C\u53EA\u5C55\u5F00\u4E00\u5C42\uFF0C\u4E3Afalse\u662F\u6DF1\u5EA6\u5C55\u5F00
 * param <span class="token punctuation">{</span>Boolean<span class="token punctuation">}</span> strict \u904D\u5386\u7B2C\u4E00\u5C42\u65F6\uFF0C\u662F\u5426\u653E\u5F03\u975E\u6570\u7EC4\u5BF9\u8C61
 * param <span class="token punctuation">{</span>Array<span class="token punctuation">}</span> output \u4FDD\u5B58\u6700\u540E\u8F93\u51FA\u7684\u5185\u5BB9
 */</span>
<span class="token keyword">var</span> <span class="token function-variable function">flatten</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">input<span class="token punctuation">,</span> shallow<span class="token punctuation">,</span> strict<span class="token punctuation">,</span> output <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> idx <span class="token operator">=</span> output<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> length <span class="token operator">=</span> <span class="token function">getLength</span><span class="token punctuation">(</span>input<span class="token punctuation">)</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> value <span class="token operator">=</span> input<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token comment">// \u8BF4\u660Eflatten\u65B9\u6CD5\u5BF9\u7C7B\u6570\u7EC4\u5BF9\u8C61\u4E5F\u6709\u652F\u6301</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isArrayLike</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>_<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token operator">||</span> _<span class="token punctuation">.</span><span class="token function">isArguments</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>shallow<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u53EA\u5C55\u5F00\u4E00\u5C42</span>
        <span class="token keyword">var</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> len <span class="token operator">=</span> value<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>j <span class="token operator">&lt;</span> len<span class="token punctuation">)</span> output<span class="token punctuation">[</span>idx<span class="token operator">++</span><span class="token punctuation">]</span> <span class="token operator">=</span> value<span class="token punctuation">[</span>j<span class="token operator">++</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u6DF1\u5EA6\u8FED\u4EE3,\u9012\u5F52\u5C55\u5F00</span>
        <span class="token function">flatten</span><span class="token punctuation">(</span>value<span class="token punctuation">,</span> shallow<span class="token punctuation">,</span> strict<span class="token punctuation">,</span> output<span class="token punctuation">)</span><span class="token punctuation">;</span>
        idx <span class="token operator">=</span> output<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>strict<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      output<span class="token punctuation">[</span>idx<span class="token operator">++</span><span class="token punctuation">]</span> <span class="token operator">=</span> value<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> output<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>output</code>\u5C06\u8FD4\u56DE\u6570\u7EC4\u5F53\u4F5C\u53C2\u6570\u4F20\u9012\uFF0C\u53EF\u4EE5\u7701\u53BB\u5728\u9012\u5F52\u7684\u65F6\u5019\u5C06\u6570\u636E\u4E00\u5C42\u5C42\u7684<code>return</code>\u5230\u4E0A\u4E00\u5C42\uFF0C\u5728\u6027\u80FD\u4E0A\u4F1A\u6709\u6240\u63D0\u5347</p><div class="custom-container tip"><p class="custom-container-title">\u6CE8\u610F</p><p>\u5F53<code>shallow</code>\u4E3A<code>false</code>\u65F6,<code>strict</code>\u4E3A<code>true</code>\u662F\uFF0C\u8FD4\u56DE\u7684\u6C38\u8FDC\u65F6<code>[]</code> \uFF0C\u8FD9\u662F\u56E0\u4E3A\uFF0C\u5F53<code>shallow</code>\u4E3A<code>false</code>\u65F6\u662F\u6DF1\u5EA6\u8FED\u4EE3\uFF0C\uFF0C\u5F53\u6700\u540E\u8FED\u4EE3\u5230\u4E0D\u662F\u6570\u7EC4\u7684\u65F6\u5019\uFF0C\u5C31\u4F1A\u8FDB\u5165\u5230<code>else if</code>\u4E2D\uFF0C\u5982\u679C\u6B64\u65F6<code>strict</code>\u4E3A<code>true</code>\u5219\u5C31\u4E0D\u4F1A\u8FDB\u5165\u5230\u8FD9\u4E2A\u5206\u652F\u4E2D\uFF0C\u90A3\u4E48<code>output</code>\u5C31\u6C38\u8FDC\u4E0D\u4F1A\u88AB\u64CD\u4F5C\uFF0C</p></div>`,23),e=[o];function c(u,l){return s(),a("div",null,e)}const k=n(p,[["render",c],["__file","flatten.html.vue"]]);export{k as default};
