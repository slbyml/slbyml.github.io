import{_ as e,r as p,o,c,a as n,b as l,e as a,d as s}from"./app.fded88d1.js";const i={},r=a(`<h1 id="javascript\u4E4B\u5E38\u89C1\u7C7B\u578B\u5224\u65AD\u6C47\u603B" tabindex="-1"><a class="header-anchor" href="#javascript\u4E4B\u5E38\u89C1\u7C7B\u578B\u5224\u65AD\u6C47\u603B" aria-hidden="true">#</a> Javascript\u4E4B\u5E38\u89C1\u7C7B\u578B\u5224\u65AD\u6C47\u603B</h1><h2 id="\u57FA\u672C\u7C7B\u578B\u7684\u5224\u65AD" tabindex="-1"><a class="header-anchor" href="#\u57FA\u672C\u7C7B\u578B\u7684\u5224\u65AD" aria-hidden="true">#</a> \u57FA\u672C\u7C7B\u578B\u7684\u5224\u65AD</h2><h3 id="typeof" tabindex="-1"><a class="header-anchor" href="#typeof" aria-hidden="true">#</a> typeof</h3><p><code>typeof</code>\u64CD\u4F5C\u7B26\u8FD4\u56DE\u4E00\u4E2A<code>\u5B57\u7B26\u4E32</code>\uFF0C\u8868\u793A\u672A\u7ECF\u8BA1\u7B97\u7684\u64CD\u4F5C\u6570\u7684\u7C7B\u578B,\u5176\u8FD4\u56DE\u7ED3\u679C\u5BF9\u6BD4\u5982\u4E0B</p><table><thead><tr><th style="text-align:center;">1</th><th style="text-align:center;">2</th><th style="text-align:center;">3</th><th style="text-align:center;">4</th><th style="text-align:center;">5</th><th style="text-align:center;">6</th><th style="text-align:center;">7</th></tr></thead><tbody><tr><td style="text-align:center;">Undefined</td><td style="text-align:center;">Null</td><td style="text-align:center;">Boolean</td><td style="text-align:center;">Number</td><td style="text-align:center;">String</td><td style="text-align:center;">Object</td><td style="text-align:center;">Symbol</td></tr><tr><td style="text-align:center;">undefined</td><td style="text-align:center;">Object</td><td style="text-align:center;">boolean</td><td style="text-align:center;">number</td><td style="text-align:center;">string</td><td style="text-align:center;">object</td><td style="text-align:center;">symbol</td></tr><tr><td style="text-align:center;"><code>Object</code>\u4E0B\u8FD8\u6709\u7EC6\u5206\u7C7B\u578B\u4E3A\uFF1A<code>Array</code>\u3001<code>Date</code>\u3001<code>RegExp</code>\u3001<code>Error</code></td><td style="text-align:center;"></td><td style="text-align:center;"></td><td style="text-align:center;"></td><td style="text-align:center;"></td><td style="text-align:center;"></td><td style="text-align:center;"></td></tr></tbody></table><p>\u9700\u8981\u6CE8\u610F\u7684\u662F\u4EE5\u4E0A\u7684\u8FD4\u56DE\u503C\u90FD\u4E3A\u5C0F\u5199\u7684\u5B57\u7B26\u4E32</p><h3 id="object-prototype-tostring" tabindex="-1"><a class="header-anchor" href="#object-prototype-tostring" aria-hidden="true">#</a> Object.prototype.toString</h3><p><code>Object.prototype.toString</code>\u80FD\u591F\u68C0\u6D4B\u51FA\u57FA\u672C\u6570\u636E\u7C7B\u578B\uFF0C\u53CAObject\u4E0B\u7EC6\u5206\u7C7B\u578B\uFF0C\u5176\u8FD4\u56DE\u5F62\u5F0F\u662F<code>[object typeClass]</code>;\u4F8B\u5982\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token keyword">undefined</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// [object Undefined]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u6B64\u65B9\u6CD5\u57FA\u672C\u80FD\u591F\u68C0\u6D4B\u51FA\u6240\u6709\u7C7B\u578B\u4E86</p><h3 id="\u7C7B\u578B\u5224\u65AD" tabindex="-1"><a class="header-anchor" href="#\u7C7B\u578B\u5224\u65AD" aria-hidden="true">#</a> \u7C7B\u578B\u5224\u65AD</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> classtype <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token string">&quot;Boolean Number String Function Array Date RegExp Object Error Symbol Set Map&quot;</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&quot; &quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">item</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    classtype<span class="token punctuation">[</span><span class="token string">&quot;[object &quot;</span> <span class="token operator">+</span> item <span class="token operator">+</span> <span class="token string">&quot;]&quot;</span><span class="token punctuation">]</span> <span class="token operator">=</span> item<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token keyword">function</span> <span class="token function">type</span><span class="token punctuation">(</span><span class="token parameter">obj</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u89E3\u51B3IE6\u4E0Bnull\u548Cundefined\u4F1A\u88ABObject.prototype.toString\u8BC6\u522B\u6210[object Object]</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>obj <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> obj <span class="token operator">+</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token comment">//\u5F53typeof\u5224\u65AD\u51FA\u7C7B\u578B\u4E3Aobject|functin\u65F6\u8C03\u7528Object.prototype.toString.call\u65B9\u6CD5</span>
  <span class="token keyword">return</span> <span class="token keyword">typeof</span> obj <span class="token operator">===</span> <span class="token string">&quot;object&quot;</span> <span class="token operator">||</span> <span class="token keyword">typeof</span> obj <span class="token operator">===</span> <span class="token string">&quot;function&quot;</span> <span class="token operator">?</span>
      classtype<span class="token punctuation">[</span><span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token operator">||</span> <span class="token string">&quot;object&quot;</span> <span class="token operator">:</span>
      <span class="token keyword">typeof</span> obj<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u7A7A\u5BF9\u8C61\u7684\u5224\u65AD" tabindex="-1"><a class="header-anchor" href="#\u7A7A\u5BF9\u8C61\u7684\u5224\u65AD" aria-hidden="true">#</a> \u7A7A\u5BF9\u8C61\u7684\u5224\u65AD</h2><p>\u5BF9\u4E8E\u4E00\u4E0B\u5BF9\u8C61\u6309\u7167\u7A7A\u5BF9\u8C61<code>null</code>,<code>undefind</code>,<code>[]</code>,<code>\u7A7A\u5B57\u7B26\u4E32</code>,<code>true or false</code>,<code>{}</code>,<code>number\u7C7B\u578B</code>,<code>new Preson()\u6784\u9020\u51FD\u6570</code></p><h3 id="jquery\u5B9E\u73B0" tabindex="-1"><a class="header-anchor" href="#jquery\u5B9E\u73B0" aria-hidden="true">#</a> jQuery\u5B9E\u73B0</h3><p><code>for</code>\u5FAA\u73AF\u4E00\u65E6\u6267\u884C\uFF0C\u5219\u5224\u65AD\u4E3A\u975E\u7A7A\u5C5E\u6027</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">isEmptyObject</span><span class="token punctuation">(</span> <span class="token parameter">obj</span> <span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> name<span class="token punctuation">;</span>
  <span class="token comment">// for in \u65B9\u6CD5\u662F\u53EF\u4EE5\u904D\u5386\u539F\u578B\u94FE\u7684\u2026\u2026</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span> name <span class="token keyword">in</span> obj <span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="lodash\u5B9E\u73B0" tabindex="-1"><a class="header-anchor" href="#lodash\u5B9E\u73B0" aria-hidden="true">#</a> lodash\u5B9E\u73B0</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>value <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// \u5224\u65AD\u7C7B\u6570\u7EC4,\u5982\u679Clength\u7B49\u4E8E0\uFF0C\u5219\u8BF4\u660E\u662F\u7A7A\u7684\u7C7B\u6570\u7EC4</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isArrayLike</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span>
      <span class="token punctuation">(</span><span class="token function">isArray</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token keyword">typeof</span> value <span class="token operator">==</span> <span class="token string">&#39;string&#39;</span> <span class="token operator">||</span> <span class="token keyword">typeof</span> value<span class="token punctuation">.</span>splice <span class="token operator">==</span> <span class="token string">&#39;function&#39;</span> <span class="token operator">||</span>
        <span class="token function">isBuffer</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token function">isTypedArray</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token function">isArguments</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token operator">!</span>value<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">var</span> tag <span class="token operator">=</span> <span class="token function">getTag</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>tag <span class="token operator">==</span> mapTag <span class="token operator">||</span> tag <span class="token operator">==</span> setTag<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token operator">!</span>value<span class="token punctuation">.</span>size<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// \u5224\u65ADvalue \u662F\u5426\u662F\u4E00\u4E2A\u539F\u578B\u5BF9\u8C61</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isPrototype</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token operator">!</span><span class="token function">baseKeys</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">.</span>length<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> key <span class="token keyword">in</span> value<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">//\u5BF9\u8C61\u4E2D\u5B58\u5728key\u4E14\u4E0D\u662F\u539F\u578B\u94FE\u91CC\u7684</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">hasOwnProperty</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>value<span class="token punctuation">,</span> key<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u6570\u7EC4\u5224\u65AD" tabindex="-1"><a class="header-anchor" href="#\u6570\u7EC4\u5224\u65AD" aria-hidden="true">#</a> \u6570\u7EC4\u5224\u65AD</h2><p>\u5F53\u68C0\u6D4BArray\u5B9E\u4F8B\u65F6, Array.isArray \u4F18\u4E8E instanceof,\u56E0\u4E3AArray.isArray\u80FD\u68C0\u6D4Biframes</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>isArray <span class="token operator">=</span> Array<span class="token punctuation">.</span>isArray <span class="token operator">||</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">array</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>array<span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token string">&#39;[object Array]&#39;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u7C7B\u6570\u7EC4\u5224\u65AD" tabindex="-1"><a class="header-anchor" href="#\u7C7B\u6570\u7EC4\u5224\u65AD" aria-hidden="true">#</a> \u7C7B\u6570\u7EC4\u5224\u65AD</h2><h3 id="\u5B9A\u4E49" tabindex="-1"><a class="header-anchor" href="#\u5B9A\u4E49" aria-hidden="true">#</a> \u5B9A\u4E49</h3><p>\u6240\u8C13\u7C7B\u6570\u7EC4\u5C31\u662F\u6307\u542B\u6709\u6307\u5411\u5BF9\u8C61\u7684<code>\u6570\u5B57</code>\u7D22\u5F15\u4E0B\u6807,\u53CA<code>length</code>\u5C5E\u6027\u6807\u5FD7\u4E2A\u6570\uFF0C\u7C7B\u6570\u7EC4\u4E0D\u542B\u6709push\u3001concat\u7B49\u6570\u7EC4\u7684\u65B9\u6CD5</p><div class="custom-container tip"><p class="custom-container-title">\u6761\u4EF6\u5982\u4E0B\uFF1A</p><ul><li>\u662F\u6570\u7EC4</li><li>length\u6709\uFF0C\u4E14\u5FC5\u987B\u4E3A\u6570\u5B57</li><li>length-1\u5FC5\u987B\u5B58\u5728\uFF0C\u8FD9\u662F\u4E3A\u4E86\u68C0\u6D4B\u6570\u7EC4\u6700\u540E\u4E00\u4E2A\u503C\u662F\u5426\u5B58\u5728</li></ul></div><p>\u5E38\u89C1\u7684\u7C7B\u6570\u7EC4\uFF1A<code>arguments</code>,<code>document.querySelectAll()</code>\u7B49\u83B7\u53D6dom\u7684\u65B9\u6CD5</p><h3 id="\u5B9E\u73B0" tabindex="-1"><a class="header-anchor" href="#\u5B9E\u73B0" aria-hidden="true">#</a> \u5B9E\u73B0</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">likeArray</span><span class="token punctuation">(</span><span class="token parameter">obj</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// obj\u5FC5\u987B\u5B58\u5728\u4E14\u542B\u6709lenght\u5C5E\u6027</span>
  <span class="token keyword">var</span> length <span class="token operator">=</span> <span class="token operator">!</span><span class="token operator">!</span>obj <span class="token operator">&amp;&amp;</span> <span class="token string">&#39;length&#39;</span> <span class="token keyword">in</span> obj <span class="token operator">&amp;&amp;</span> obj<span class="token punctuation">.</span>length<span class="token punctuation">,</span>
  <span class="token comment">// \u83B7\u53D6obj\u7684\u6570\u636E\u7C7B\u578B</span>
    type <span class="token operator">=</span> <span class="token function">type</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span>
  <span class="token comment">// \u4E0D\u80FD\u662Ffunction\u7C7B\u578B\uFF0C\u4E0D\u80FD\u662Fwindow</span>
  <span class="token comment">// \u5982\u679C\u662Farray\u5219\u76F4\u63A5\u8FD4\u56DEtrue</span>
  <span class="token comment">// \u6216\u8005\u5F53length\u7684\u6570\u636E\u7C7B\u578B\u662Fnumber\uFF0C\u4E14\u5927\u4E8E0\uFF0C\u5B58\u5728\u6700\u540E\u4E00\u4E2A\u5C5E\u6027</span>
  <span class="token keyword">return</span> <span class="token string">&#39;function&#39;</span> <span class="token operator">!==</span> type <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token function">isWindow</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> 
  <span class="token punctuation">(</span><span class="token string">&#39;array&#39;</span> <span class="token operator">===</span> type <span class="token operator">||</span> length <span class="token operator">===</span> <span class="token number">0</span> <span class="token operator">||</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> length <span class="token operator">===</span> <span class="token string">&#39;number&#39;</span> <span class="token operator">&amp;&amp;</span> length <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token keyword">in</span> obj<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="custom-container tip"><p class="custom-container-title">\u6CE8\uFF1A</p><p><code>length === 0</code>\u8BA4\u4E3A\u662F\u6570\u7EC4\uFF0C\u662F\u4E3A\u4E86\u5224\u65AD\u5982\u4E0B\u60C5\u51B5\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">likeArray</span><span class="token punctuation">(</span>arguments<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div><h3 id="underscore\u7684\u5B9E\u73B0" tabindex="-1"><a class="header-anchor" href="#underscore\u7684\u5B9E\u73B0" aria-hidden="true">#</a> underscore\u7684\u5B9E\u73B0</h3><p><code>underscore</code>\u5BF9\u7C7B\u6570\u7EC4\u7684\u5B9E\u73B0\u6BD4\u8F83\u7B80\u5355\u5BBD\u677E,\u5176\u5224\u65AD\u4F9D\u636E\u662F:\`length\u4E3A\u6570\u5B57\uFF0C\u4E14\u53D6\u503C\u8303\u56F4\u57280&lt;=length&lt;=MAX_ARRAY_INDEX</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">//js \u4E2D\u80FD\u7CBE\u786E\u8868\u793A\u7684\u6700\u5927\u6570\u5B57</span>
<span class="token keyword">var</span> <span class="token constant">MAX_ARRAY_INDEX</span> <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">pow</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">53</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> getLength <span class="token operator">=</span> <span class="token function">property</span><span class="token punctuation">(</span><span class="token string">&#39;length&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> <span class="token function-variable function">isArrayLike</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">collection</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> length <span class="token operator">=</span> <span class="token function">getLength</span><span class="token punctuation">(</span>collection<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token keyword">typeof</span> length <span class="token operator">==</span> <span class="token string">&#39;number&#39;</span> <span class="token operator">&amp;&amp;</span> length <span class="token operator">&gt;=</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> length <span class="token operator">&lt;=</span> <span class="token constant">MAX_ARRAY_INDEX</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="nan\u7684\u5224\u65AD" tabindex="-1"><a class="header-anchor" href="#nan\u7684\u5224\u65AD" aria-hidden="true">#</a> NaN\u7684\u5224\u65AD</h2><p>NaN\u7684\u4EA7\u751F\uFF1A\u5F53\u7B97\u672F\u8FD0\u7B97\u8FD4\u56DE\u4E00\u4E2A\u672A\u5B9A\u4E49\u7684\u6216\u65E0\u6CD5\u8868\u793A\u7684\u503C\u65F6\uFF0CNaN\u5C31\u4EA7\u751F\u4E86\u3002\u4F46\u662F\uFF0CNaN\u5E76\u4E0D\u4E00\u5B9A\u7528\u4E8E\u8868\u793A\u67D0\u4E9B\u503C\u8D85\u51FA\u8868\u793A\u8303\u56F4\u7684\u60C5\u51B5\u3002\u5C06\u67D0\u4E9B\u4E0D\u80FD\u5F3A\u5236\u8F6C\u6362\u4E3A\u6570\u503C\u7684\u975E\u6570\u503C\u8F6C\u6362\u4E3A\u6570\u503C\u7684\u65F6\u5019\uFF0C\u4E5F\u4F1A\u5F97\u5230NaN\u3002</p><p>\u5224\u65AD\u4E00\u4E2A\u6570\u662F\u4E0D\u662FNaN\u4E0D\u80FD\u5355\u7EAF\u5730\u4F7F\u7528 === \u8FD9\u6837\u6765\u5224\u65AD, \u56E0\u4E3ANaN\u4E0D\u4E0E\u4EFB\u4F55\u6570\u76F8\u7B49, \u5305\u62EC\u81EA\u8EAB</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">//loadsh\u7684\u5B9E\u73B0</span>
<span class="token keyword">function</span> <span class="token function">isNaN</span><span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token function">isNumber</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> value <span class="token operator">!=</span> <span class="token operator">+</span>value<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="dom\u5143\u7D20\u5224\u65AD" tabindex="-1"><a class="header-anchor" href="#dom\u5143\u7D20\u5224\u65AD" aria-hidden="true">#</a> DOM\u5143\u7D20\u5224\u65AD</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">//loadsh\u7684\u5B9E\u73B0</span>
<span class="token keyword">function</span> <span class="token function">isObjectLike</span><span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> value <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> <span class="token keyword">typeof</span> value <span class="token operator">==</span> <span class="token string">&#39;object&#39;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">isElement</span><span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token function">isObjectLike</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> value<span class="token punctuation">.</span>nodeType <span class="token operator">===</span> <span class="token number">1</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="window\u5BF9\u8C61\u5224\u65AD" tabindex="-1"><a class="header-anchor" href="#window\u5BF9\u8C61\u5224\u65AD" aria-hidden="true">#</a> window\u5BF9\u8C61\u5224\u65AD</h2>`,40),u=s("\u5224\u65AD\u4F9D\u636E\uFF1A"),d=n("code",null,"window",-1),k=s("\u5BF9\u8C61\u53C8\u4E00\u4E2Awindow\u5C5E\u6027\u6307\u5411\u81EA\u8EAB,\u53CA"),v=n("code",null,"window === window.window",-1),m=s("\u3002"),b={href:"https://developer.mozilla.org/zh-CN/docs/Web/API/Window/window",target:"_blank",rel:"noopener noreferrer"},h=s("MDN"),y=a(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">isWindow</span><span class="token punctuation">(</span> <span class="token parameter">obj</span> <span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> obj <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> obj <span class="token operator">===</span> obj<span class="token punctuation">.</span>window<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1);function g(f,w){const t=p("ExternalLinkIcon");return o(),c("div",null,[r,n("p",null,[u,d,k,v,m,n("a",b,[h,l(t)])]),y])}const x=e(i,[["render",g],["__file","type.html.vue"]]);export{x as default};
