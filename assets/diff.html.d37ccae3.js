import{_ as t,r as e,o,c,a as n,b as p,d as s,e as l}from"./app.fded88d1.js";const u={},i=n("h1",{id:"\u6700\u957F\u9012\u589E\u5B50\u5E8F\u5217\u53CAvue3-0\u4E2Ddiff\u7B97\u6CD5",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u6700\u957F\u9012\u589E\u5B50\u5E8F\u5217\u53CAvue3-0\u4E2Ddiff\u7B97\u6CD5","aria-hidden":"true"},"#"),s(" \u6700\u957F\u9012\u589E\u5B50\u5E8F\u5217\u53CAvue3.0\u4E2Ddiff\u7B97\u6CD5")],-1),r=n("p",null,[s("VUE3.0\u5BF9diff\u8FC7\u7A0B\u8FDB\u884C\u4E86\u5927\u5347\u7EA7\uFF0C\u53BB\u6389\u4E86\u9488\u5BF9\u4E0B\u6807key\u7684\u67E5\u627E\uFF0C\u800C\u662F\u53D8\u6210\u4E86\u8BA1\u7B97\u53EF\u4EE5\u6700\u5C11\u79FB\u52A8dom\u7684\u65B9\u6848\uFF0C\u7136\u540E\u5728\u8FDB\u884Cdom\u66F4\u65B0\uFF0C\u800C\u8981\u60F3\u770B\u61C2vue3.0\u4E2Ddiff\u7B97\u6CD5\uFF0C\u9996\u5148\u9700\u8981\u5148\u5BF9"),n("code",null,"\u6700\u957F\u9012\u589E\u5B50\u5E8F\u5217"),s("\u7684\u6C42\u89E3\u6709\u4E00\u4E2A\u57FA\u672C\u7684\u4E86\u89E3\uFF0C\u56E0\u4E3Avue\u5C31\u662F\u5728\u5B83\u7684\u57FA\u7840\u4E0A\u6765\u4E0D\u65AD\u6253\u78E8\u3001\u5B8C\u5584\u7684diff\u7B97\u6CD5\u3002")],-1),k={id:"\u6C42\u89E3\u6700\u957F\u9012\u589E\u5B50\u5E8F\u5217leetcode300",tabindex:"-1"},d=n("a",{class:"header-anchor",href:"#\u6C42\u89E3\u6700\u957F\u9012\u589E\u5B50\u5E8F\u5217leetcode300","aria-hidden":"true"},"#",-1),m=s(" \u6C42\u89E3\u6700\u957F\u9012\u589E\u5B50\u5E8F\u5217"),v={href:"https://leetcode.cn/problems/longest-increasing-subsequence/",target:"_blank",rel:"noopener noreferrer"},b=s("leetcode300"),h=l(`<p>\u7ED9\u4F60\u4E00\u4E2A\u6574\u6570\u6570\u7EC4<code>nums</code>\uFF0C\u627E\u5230\u5176\u4E2D\u6700\u957F\u4E25\u683C\u9012\u589E\u5B50\u5E8F\u5217\u7684\u957F\u5EA6<br> \u793A\u4F8B:</p><blockquote><p>\u8F93\u5165\uFF1Anums = [10, 9, 2, 5, 3, 7, 101, 18]<br> \u8F93\u51FA\uFF1A4<br> \u89E3\u91CA\uFF1A\u6700\u957F\u9012\u589E\u5B50\u5E8F\u5217\u662F [2, 3, 7, 101]\uFF0C\u56E0\u6B64\u957F\u5EA6\u4E3A 4 \u3002</p></blockquote><h3 id="\u52A8\u6001\u89C4\u5212-o-n2" tabindex="-1"><a class="header-anchor" href="#\u52A8\u6001\u89C4\u5212-o-n2" aria-hidden="true">#</a> \u52A8\u6001\u89C4\u5212\uFF1AO(n\xB2)</h3><p>\u5B9A\u4E49\uFF1A<code>dp[i]</code>\u4EE3\u8868\u4EE5<code>num[i]</code>\u7ED3\u5C3E\u7684\u6700\u957F\u5B50\u5E8F\u5217\u7684\u957F\u5EA6<br> \u8F6C\u79FB\u65B9\u7A0B\uFF1A</p><ul><li>\u53CC\u5C42\u904D\u5386\uFF1A\u5BF9\u6BD4<code>num[i]</code>\u548C<code>num[i]</code>\u4E4B\u524D\u7684\u6570\u636E</li><li>\u5F53<code>num[i]&gt;num[j]</code>\u65F6\uFF0C<code>num[i]</code>\u5C31\u53EF\u4EE5\u62FC\u63A5\u5728<code>num[j]</code>\u540E\uFF0C\u6B64\u65F6<code>num[i]</code>\u4F4D\u7F6E\u7684\u4E0A\u5347\u5B50\u5E8F\u5217\u957F\u5EA6\u4E3A\uFF1A<code>dp[i]+1</code></li><li>\u5F53<code>num[i]&lt;num[j]</code>\u65F6\uFF0C<code>num[i]</code>\u548C<code>num[j]</code>\u65E0\u6CD5\u6784\u6210\u4E0A\u5347\u5B50\u5E8F\u5217\uFF0C\u8DF3\u8FC7</li><li>\u8BA1\u7B97\u51FA<code>dp[i]</code>\u4E2D\u6700\u5927\u7684\u503C\u5373\u4E3A\u8BA1\u7B97\u7ED3\u679C</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">lengthOfLIS</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">nums</span><span class="token operator">:</span> number<span class="token punctuation">[</span><span class="token punctuation">]</span></span><span class="token punctuation">)</span><span class="token operator">:</span> number <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token literal-property property">len</span><span class="token operator">:</span>number <span class="token operator">=</span> nums<span class="token punctuation">.</span>length
  <span class="token keyword">if</span> <span class="token punctuation">(</span>len <span class="token operator">&lt;=</span><span class="token number">1</span> <span class="token punctuation">)</span> <span class="token keyword">return</span> len<span class="token punctuation">;</span>
  <span class="token keyword">let</span> <span class="token literal-property property">dp</span><span class="token operator">:</span>number<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span>len<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> nums<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> i<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&gt;</span> nums<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> dp<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> Math<span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span><span class="token operator">...</span>dp<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8BA1\u7B97\u8FC7\u7A0B\u56FE\uFF1A<br><img src="https://slbblog.oss-cn-beijing.aliyuncs.com/algorithm/leetcode300.png?x-oss-process=image/interlace,1/watermark,text_c2xieW1sLmdpdGh1Yi5pbw,color_333333,size_25,rotate_7,x_25,y_50,,image/resize,w_400" alt="\u6700\u957F\u9012\u589E\u5B50\u5E8F\u5217"></p><h3 id="\u8D2A\u5FC3-\u4E8C\u5206\u67E5\u627E-o-nlogn" tabindex="-1"><a class="header-anchor" href="#\u8D2A\u5FC3-\u4E8C\u5206\u67E5\u627E-o-nlogn" aria-hidden="true">#</a> \u8D2A\u5FC3 + \u4E8C\u5206\u67E5\u627E\uFF1AO(nlogn)</h3><p>\u8981\u4F7F\u4E0A\u5347\u5B50\u5E8F\u5217\u7684\u957F\u5EA6\u5C3D\u53EF\u80FD\u7684\u957F\uFF0C\u5C31\u8981\u4F7F\u5E8F\u5217\u4E0A\u5347\u7684\u901F\u5EA6\u5C3D\u53EF\u80FD\u7684\u6162\uFF0C\u56E0\u6B64\u9700\u8981\u8BA9\u5E8F\u5217\u5185\u672B\u5C3E\u6570\u5B57\u5C3D\u53EF\u80FD\u7684\u5C0F\u3002<br> \u6211\u4EEC\u53EF\u4EE5\u7EF4\u62A4\u4E00\u4E2A<code>result</code>\u6570\u7EC4\uFF0C\u7528\u6765\u5B58\u653E\u5355\u8C03\u9012\u589E\u5E8F\u5217\u7ED3\u679C\uFF0C\u7136\u540E\u4F9D\u6B21\u904D\u5386<code>nums</code>\u6570\u7EC4\uFF1B</p><ul><li>\u5982\u679C<code>nums[i] &gt; result[len]</code>, \u5219\u76F4\u63A5\u63D2\u5165\u5230<code>result\u672B\u5C3E</code></li><li>\u5426\u5219\uFF0C\u5728result\u6570\u7EC4\u4E2D\u901A\u8FC7<code>\u4E8C\u5206\u67E5\u627E</code>\u7684\u65B9\u5F0F\uFF0C\u627E\u5230\u7B2C\u4E00\u4E2A\u6BD4<code>nums[i]</code>\u5927\u7684\u503C<code>result[j]</code>;\u5E76\u66F4\u65B0<code>result[j] = nums[i]</code></li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">lengthOfLIS</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">nums</span><span class="token operator">:</span> number<span class="token punctuation">[</span><span class="token punctuation">]</span></span><span class="token punctuation">)</span><span class="token operator">:</span> number <span class="token punctuation">{</span>
  <span class="token keyword">const</span> n <span class="token operator">=</span> nums<span class="token punctuation">.</span>length
  <span class="token keyword">if</span> <span class="token punctuation">(</span>n <span class="token operator">&lt;=</span><span class="token number">1</span> <span class="token punctuation">)</span> <span class="token keyword">return</span> n<span class="token punctuation">;</span>
  <span class="token keyword">let</span> <span class="token literal-property property">result</span><span class="token operator">:</span>number<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>nums<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">]</span>
  <span class="token keyword">let</span> len <span class="token operator">=</span> result<span class="token punctuation">.</span>length	<span class="token comment">// \u6700\u5927\u957F\u5EA6</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&gt;</span> result<span class="token punctuation">[</span>len<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">//\u5927\u4E8E\u672B\u5C3E\u7684\u503C\uFF0C \u76F4\u63A5\u8FD1\u6808</span>
      result<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span> 
      <span class="token operator">++</span>len
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token keyword">let</span> left <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> right <span class="token operator">=</span> len<span class="token punctuation">;</span>
      <span class="token keyword">while</span><span class="token punctuation">(</span>left <span class="token operator">&lt;</span> right<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// \u4E8C\u5206\u67E5\u627E\u5E8F\u5217\u5185\u7B2C\u4E00\u4E2A\u5927\u4E8Enums[i]\u7684\u503C</span>
        <span class="token keyword">const</span> mid <span class="token operator">=</span> <span class="token punctuation">(</span>left <span class="token operator">+</span> right<span class="token punctuation">)</span> <span class="token operator">&gt;&gt;</span> <span class="token number">1</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>result<span class="token punctuation">[</span>mid<span class="token punctuation">]</span> <span class="token operator">&lt;</span> nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          left <span class="token operator">=</span> mid <span class="token operator">+</span> <span class="token number">1</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
          right <span class="token operator">=</span> mid
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
      result<span class="token punctuation">[</span>left<span class="token punctuation">]</span> <span class="token operator">=</span> nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token comment">// \u66FF\u6362</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> len
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8BA1\u7B97\u8FC7\u7A0B\u56FE\uFF1A<br><img src="https://slbblog.oss-cn-beijing.aliyuncs.com/algorithm/leetcode300-1.png?x-oss-process=image/interlace,1/watermark,text_c2xieW1sLmdpdGh1Yi5pbw,color_333333,size_25,rotate_7,x_25,y_50,,image/resize,w_500" alt="\u6700\u957F\u9012\u589E\u5B50\u5E8F\u5217"></p><blockquote><p>\u6CE8\u610F\uFF1A\u8FD9\u4E2A\u65B9\u6848\u4E2D\u7684<code>result</code>\u5F97\u5230\u7684\u957F\u5EA6\u662F\u6B63\u786E\u7684\uFF0C\u4F46\u662F\u987A\u5E8F\u5E76\u4E0D\u4E00\u5B9A\u662F\u6B63\u786E\u7ED3\u679C\u9700\u8981\u7684\u987A\u5E8F\uFF0C\u6BD4\u5982<code>[10, 9, 2, 5, 3, 7, 1, 18]</code>\u5F97\u5230\u7684<code>result</code>\u4E3A<code>[1, 3, 7, 18]</code>\uFF0C</p></blockquote><p>\u90A3\u4E48\u4E3A\u4EC0\u4E48\u8D2A\u5FC3\u7B97\u6CD5\u53EF\u4EE5\u5F97\u5230\u6B63\u786E\u7684\u957F\u5EA6\u5462\uFF1F</p><p>\u8981\u60F3\u5F97\u5230\u6700\u957F\u4E0A\u5347\u5B50\u5E8F\u5217\u7684\u6B63\u786E\u957F\u5EA6\uFF0C\u9996\u5148\u5FC5\u987B\u4FDD\u8BC1<code>result</code>\u5185\u5B58\u653E\u7684\u6570\u503C\u589E\u901F\u5C3D\u53EF\u80FD\u7A33\u548C\u6162\uFF0C\u6240\u4EE5\u8981\u4F7F\u7528\u589E\u957F\u7A7A\u95F4\u5927\u3001\u6709\u6F5C\u529B\u7684\u503C\u6765\u7EC4\u5408\uFF1B</p><p>\u6BD4\u5982<code>1,50,5,\u2026\u2026</code>\u5F53\u6211\u4EEC\u904D\u5386\u5230<code>50</code>\u7684\u65F6\u5019\uFF0C\u5E76\u4E0D\u77E5\u9053\u540E\u9762\u662F\u5426\u8FD8\u6709\u503C\uFF0C\u6B64\u65F6\u5148\u5C06\u6570\u636E\u653E\u5165\u6808\u4E2D\u5B58\u8D77\u6765\u662F\u660E\u667A\u7684\uFF0C\u7EE7\u7EED\u5F80\u540E\u904D\u5386\u9047\u5230\u4E86<code>5</code>\uFF0C\u663E\u7136\u9009\u7528<code>1,5</code>\u6BD4\u9009\u7528<code>1,50</code>\u66F4\u8BA9\u4EBA\u653E\u5FC3\u4E5F\u66F4\u6709\u6F5C\u529B\uFF0C\u56E0\u4E3A\u540E\u9762\u7684\u6570\u518D\u5F80\u6808\u5185\u5B58\u653E\u7684\u51E0\u7387\u66F4\u5927\uFF0C\u5373\u4F7F\u540E\u9762\u6CA1\u6709\u66F4\u591A\u503C\u4E86\uFF0C\u90A3\u4E48\u9009\u7528<code>1,5</code>\u8FD8\u662F<code>1,50</code>\u5176\u5B9E\u6700\u540E\u957F\u5EA6\u662F\u4E00\u6837\u7684\u3002</p><p>\u90A3\u5982\u679C\u4F7F\u7528\u4E86\u66F4\u5C0F\u7684\u503C\uFF0C\u5DF2\u7ECF\u5728\u6808\u5185\u7684\u503C\u5E94\u8BE5\u5982\u4F55\u5904\u7406\u5462\uFF1F\u6BD4\u5982\u6211\u4EEC\u6808\u4E2D\u5B58\u653E\u4E86<code>1,3,9,10</code>,\u518D\u5F80\u540E\u904D\u5386\u7684\u65F6\u5019\u9047\u5230\u4E86<code>5</code>\uFF0C\u663E\u7136<code>5</code>\u6BD4<code>9,10</code>\u90FD\u66F4\u6709\u6F5C\u529B\uFF0C\u5982\u679C\u5C06\u6808\u76F4\u63A5\u53D8\u6210<code>1,3,5</code>\u53C8\u4E0D\u592A\u53EF\u80FD\uFF0C\u56E0\u4E3A\u5982\u679C\u540E\u9762\u6CA1\u6709\u66F4\u591A\u503C\u4E86\uFF0C\u957F\u5EA6\u7531<code>4</code>\u53D8\u6210<code>3</code>\uFF0C\u7ED3\u679C\u662F\u9519\u8BEF\u7684\uFF1B\u4F46\u5982\u679C\u4E0D\u53BB\u7BA1<code>5</code>\u7684\u8BDD\uFF0C\u540E\u9762\u53C8\u78B0\u5230\u4E86 <code>6,7,8</code>\u90A3\u4E0D\u5C31JJ\u4E86\uFF1B</p><p>\u6240\u4EE5\u6211\u4EEC\u53EF\u4EE5\u8003\u8651\u65E2\u4E0D\u80FD\u653E\u5F03\u6709\u6F5C\u529B\u7684\u503C\uFF0C\u4E5F\u4E0D\u80FD\u9519\u5931\u6B63\u786E\u7684\u957F\u5EA6\u7ED3\u679C\uFF0C\u56E0\u6B64\u6211\u4EEC\u4E0D\u59A8\u9C7C\u548C\u718A\u638C\u90FD\u517C\u5F97\u4E00\u4E0B\uFF0C\u6BD4\u5982\u5C06\u7B2C\u4E00\u4E2A\u5927\u4E8E<code>5</code>\u7684\u503C<code>9</code>\u66FF\u6362\u6389\u53D8\u6210<code>1,3,5,10</code>\uFF0C\u8FD9\u6837\u5728\u653E\u5F03\u6808\u5185\u5BB9\u987A\u5E8F\u6B63\u786E\u6027\u7684\u60C5\u51B5\u4E0B\u4FDD\u8BC1\u4E86\u6808\u957F\u5EA6\u7684\u6B63\u786E\u6027\uFF0C\u63A5\u4E0B\u6765\uFF0C\u518D\u5F80\u540E\u904D\u5386\u4F1A\u9047\u52303\u79CD\u60C5\u51B5\uFF1A</p><ul><li><p>\u540E\u9762\u6CA1\u6709\u66F4\u591A\u503C\u4E86\uFF0C\u6B64\u65F6\u7ED3\u679C\u957F\u5EA6\u4E3A<code>4</code>\uFF0C\u662F\u6CA1\u95EE\u9898\u7684</p></li><li><p>\u5982\u679C\u540E\u9762\u9047\u5230<code>50</code>\uFF0C\u5219\u53EF\u4EE5\u76F4\u63A5\u63D2\u5165\u5230\u6808\u4E2D\uFF0C\u53D8\u4E3A<code>1,3,5,10,50</code>\uFF0C\u957F\u5EA6\u4E3A<code>5</code>\u4E5F\u662F\u6CA1\u95EE\u9898\u7684\uFF0C\u56E0\u4E3A\u6211\u4EEC\u5E76\u6CA1\u6709\u5C06\u6700\u540E\u7684\u503C\u66FF\u6362\u6389\uFF0C\u6240\u4EE5\u6211\u4EEC\u53EF\u4EE5\u5C06\u6808\u60F3\u8C61\u6210\u4E3A<code>9</code>\u505A\u4E86\u4E2A\u66FF\u8EAB<code>5</code>\uFF0C\u771F\u6B63\u7684\u503C\u8FD8\u662F\u66FF\u6362\u524D\u7684<code>1,3,9,10</code></p></li><li><p>\u5982\u679C\u540E\u9762\u9047\u5230\u4E86<code>6</code>\uFF0C\u5219\u6309\u7167\u4E00\u5F00\u59CB\u7684\u89C4\u5219\uFF0C\u5C06<code>10</code>\u66FF\u6362\u6389\u53D8\u6210<code>1,3,5,6</code>\uFF0C\u957F\u5EA6\u4E3A<code>4</code>\u4E5F\u662F\u6CA1\u95EE\u9898\u7684\uFF0C\u56E0\u4E3A\u6211\u4EEC\u5C06\u6700\u540E\u7684\u503C\u90FD\u505A\u4E86\u66FF\u6362\uFF0C\u6240\u4EE5\u6B64\u65F6\u66FF\u8EAB<code>5</code>\u5C31\u53D8\u6210\u4E86\u771F\u8EAB\uFF0C\u540C\u65F6\u6211\u4EEC\u4E5F\u53D1\u73B0\uFF0C\u5F97\u5230\u7684\u6808\u4E2D\u7684\u503C\u5C31\u662F\u6700\u540E\u7684\u6700\u4F18\u89E3</p></li></ul><p>\u53EF\u4EE5\u53D1\u73B0\uFF0C\u5728\u6CA1\u6709\u66FF\u6362\u5B8C\u6808\u4E2D\u7684\u503C\u65F6\uFF0C<code>\u6808</code>\u4E2D\u88AB\u66FF\u6362\u7684\u7684\u503C\uFF0C\u8D77\u5230\u7684\u662F\u5360\u4F4D\u7684\u6548\u679C\uFF0C\u4E3A\u540E\u9762\u904D\u5386\u6570\u5B57\u63D0\u4F9B\u53C2\u7167\u7684\u4F5C\u7528\uFF1B</p><h2 id="\u6700\u957F\u4E0A\u5347\u5B50\u5E8F\u5217\u8FDB\u9636-\u5F97\u5230\u6B63\u786E\u7684\u5E8F\u5217" tabindex="-1"><a class="header-anchor" href="#\u6700\u957F\u4E0A\u5347\u5B50\u5E8F\u5217\u8FDB\u9636-\u5F97\u5230\u6B63\u786E\u7684\u5E8F\u5217" aria-hidden="true">#</a> \u6700\u957F\u4E0A\u5347\u5B50\u5E8F\u5217\u8FDB\u9636\uFF1A\u5F97\u5230\u6B63\u786E\u7684\u5E8F\u5217</h2><p>\u8981\u60F3\u5F97\u5230\u6B63\u786E\u7684\u5E8F\u5217\uFF0C\u9996\u5148\u8981\u5BF9\u4E0A\u9762\u7684\u4EE3\u7801\u505A\u4E00\u4E9B\u6539\u52A8\uFF1A</p><ul><li>\u5C06<code>result</code>\u4FEE\u6539\u4E3A\u5B58\u50A8\u4E0B\u6807\uFF08\u6700\u540E\u56DE\u6EAF\u662F\u4F1A\u6539\u6210\u771F\u6B63\u7684\u503C\uFF09\uFF1B\u4E3A\u4E0B\u9762\u7684<code>chain</code>\u63D0\u4F9B\u53C2\u8003</li><li>\u589E\u52A0<code>chain</code>\u53D8\u91CF\uFF0C\u5B58\u653E\u6BCF\u4E00\u4F4D\u5728\u88AB\u52A0\u5165\u5230<code>result</code>\u65F6\u5176\u5BF9\u5E94\u7684\u524D\u4E00\u4F4D\u7684\u4E0B\u6807\u503C\uFF0C\u8FDB\u884C\u5173\u7CFB\u7ED1\u5B9A</li><li>\u56DE\u6EAF<code>chain</code>\uFF0C\u8986\u76D6<code>result</code>\u7684\u503C\u3002\u56E0\u4E3A<code>result</code>\u5185\uFF0C<code>\u6700\u540E\u4E00\u4F4D\u4E00\u5B9A\u662F\u6B63\u786E\u7684</code>\uFF0C\u6240\u4EE5\u53EF\u4EE5\u4ECE\u540E\u5F80\u524D\u8FDB\u884C\u4FEE\u6B63</li></ul><p>\u4E0A\u9762\u6211\u4EEC\u8BF4\u8FC7\u5728\u5BF9\u6808\u5185\u67D0\u4E2A\u503C\u8FDB\u884C\u66FF\u6362\u540E\uFF0C\u53D8\u52A8\u7684\u503C\u540E\u9762\u7684\u6240\u6709\u7684\u503C\u5982\u679C\u90FD\u6CA1\u6709\u53D8\u8FC7\u7684\u8BDD\uFF0C\u90A3\u4E48\u66FF\u6362\u7684\u503C\u53EA\u662F\u4E00\u4E2A\u66FF\u8EAB\uFF0C\u65E0\u6CD5\u4F5C\u4E3A\u6700\u540E\u7ED3\u679C\u8FDB\u884C\u8F93\u51FA\uFF0C\u53EA\u6709\u66FF\u6362\u503C\u540E\u9762\u7684\u90FD\u53D8\u52A8\u8FC7\u4E86\uFF0C\u624D\u4F1A\u7531\u66FF\u8EAB\u53D8\u4E3A\u771F\u8EAB\u3002\u90A3\u4E48\u5728\u6CA1\u6709\u5168\u90E8\u66FF\u6362\u524D\uFF0C\u6211\u4EEC\u662F\u9700\u8981\u6709\u4E00\u79CD\u65B9\u6CD5\u53BB\u4FDD\u5B58\u539F\u6765\u987A\u5E8F\u7684\uFF1A</p><p>\u6BD4\u5982<code>3,5,7</code>\uFF0C\u53EF\u4EE5\u60F3\u8C61\u6210<code>7-&gt;5-&gt;3</code>\u4ED6\u4EEC\u4E4B\u95F4\u662F\u5F3A\u7ED1\u5B9A\uFF0C<code>7</code>\u524D\u9762\u7ED1\u5B9A\u7684\u6C38\u8FDC\u90FD\u662F<code>5</code>\uFF0C<code>5</code>\u524D\u9762\u6C38\u8FDC\u90FD\u662F<code>3</code></p><ul><li>\u5982\u679C\u6B64\u65F6\u9047\u5230\u4E86<code>4</code>\uFF0C\u6808\u4F1A\u53D8\u6210<code>3,4,7</code>\uFF0C<code>5</code>\u867D\u7136\u53D8\u6210\u4E86<code>4</code>\uFF0C\u4F46\u662F<code>7-&gt;5-&gt;3</code>\u8FD9\u4E2A\u7ED1\u5B9A\u5173\u7CFB\u662F\u4E0D\u4F1A\u53D8\u7684</li><li>\u5982\u679C\u6B64\u65F6\u53C8\u9047\u5230\u4E86<code>15</code>\uFF0C\u6808\u53D8\u6210\u4E86<code>3,4,7,15</code>\uFF0C\u5219\u7ED1\u5B9A\u548C\u56DE\u6EAF\u5173\u7CFB\u5C31\u53D8\u6210\u4E86<code>15-&gt;7-&gt;5-&gt;3</code></li></ul><p>\u90A3\u4E48\u4EC0\u4E48\u65F6\u5019<code>4</code>\u80FD\u751F\u6548\u5462\uFF1F\u90A3\u5C31\u662F\u5728<code>4</code>\u540E\u9762\u7684\u503C\u90FD\u88AB\u66FF\u6362\u4E86\uFF0C\u6BD4\u5982\u53C8\u9047\u5230\u4E86<code>6</code>\u548C<code>8</code>\uFF0C\u5219\u6808\u53D8\u4E3A\u4E86<code>3\uFF0C4\uFF0C6\uFF0C8</code>,\u7ED1\u5B9A\u548C\u56DE\u6EAF\u5173\u7CFB\u5C31\u53D8\u6210\u4E86<code>8-&gt;6-&gt;4-&gt;3</code></p><p><img src="https://slbblog.oss-cn-beijing.aliyuncs.com/algorithm/getOfLIS.png?x-oss-process=image/interlace,1/watermark,text_c2xieW1sLmdpdGh1Yi5pbw,color_333333,size_25,rotate_7,x_25,y_50,,image/resize,w_500" alt="\u6700\u957F\u9012\u589E\u5B50\u5E8F\u5217"></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">getOfLIS</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">nums</span><span class="token operator">:</span> number<span class="token punctuation">[</span><span class="token punctuation">]</span></span><span class="token punctuation">)</span><span class="token operator">:</span>number<span class="token punctuation">[</span><span class="token punctuation">]</span>  <span class="token punctuation">{</span>
  <span class="token keyword">const</span> n <span class="token operator">=</span> nums<span class="token punctuation">.</span>length
  <span class="token keyword">if</span> <span class="token punctuation">(</span>n <span class="token operator">&lt;=</span><span class="token number">1</span> <span class="token punctuation">)</span> <span class="token keyword">return</span> nums<span class="token punctuation">;</span>
  <span class="token keyword">let</span> <span class="token literal-property property">result</span><span class="token operator">:</span>number<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>  <span class="token comment">// \u7531\u539F\u6765\u5B58\u50A8\u5177\u4F53\u503C\u6539\u4E3A\u5B58\u50A8\u4E0B\u6807</span>
  <span class="token keyword">let</span> chain <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Map</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// \u901A\u8FC7\u4E0B\u6807\u5B58\u50A8\u6620\u5C04\u5173\u7CFB</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> j <span class="token operator">=</span> result<span class="token punctuation">[</span>result<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&gt;</span> nums<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      chain<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token literal-property property">val</span><span class="token operator">:</span> i<span class="token punctuation">,</span> <span class="token literal-property property">pre</span><span class="token operator">:</span> j<span class="token punctuation">}</span><span class="token punctuation">)</span>
      result<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token keyword">let</span> left <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> right <span class="token operator">=</span> result<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
      <span class="token keyword">while</span><span class="token punctuation">(</span>left <span class="token operator">&lt;</span> right<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> mid <span class="token operator">=</span> <span class="token punctuation">(</span>left <span class="token operator">+</span> right<span class="token punctuation">)</span> <span class="token operator">&gt;&gt;</span> <span class="token number">1</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>nums<span class="token punctuation">[</span>result<span class="token punctuation">[</span>mid<span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">&lt;</span> nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          left <span class="token operator">=</span> mid <span class="token operator">+</span> <span class="token number">1</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
          right <span class="token operator">=</span> mid
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
      chain<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token literal-property property">val</span><span class="token operator">:</span> i<span class="token punctuation">,</span> <span class="token literal-property property">pre</span><span class="token operator">:</span> result<span class="token punctuation">[</span>left <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
      result<span class="token punctuation">[</span>left<span class="token punctuation">]</span> <span class="token operator">=</span> i
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">let</span> preIdx <span class="token operator">=</span> result<span class="token punctuation">[</span>result<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span>
  <span class="token keyword">let</span> len <span class="token operator">=</span> result<span class="token punctuation">.</span>length
 <span class="token comment">// \u4ECE\u540E\u5F80\u524D\u8FDB\u884C\u56DE\u6EAF\uFF0C\u4FEE\u6B63\u8986\u76D6result\u4E2D\u7684\u503C\uFF0C\u627E\u5230\u6B63\u786E\u7684\u987A\u5E8F</span>
  <span class="token keyword">while</span><span class="token punctuation">(</span>chain<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>preIdx<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  
  	<span class="token keyword">let</span> lastObj <span class="token operator">=</span> chain<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>preIdx<span class="token punctuation">)</span>  
    result<span class="token punctuation">[</span><span class="token operator">--</span>len<span class="token punctuation">]</span> <span class="token operator">=</span> nums<span class="token punctuation">[</span>lastObj<span class="token punctuation">.</span>val<span class="token punctuation">]</span>
    preIdx <span class="token operator">=</span> lastObj<span class="token punctuation">.</span>pre
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> result
<span class="token punctuation">}</span><span class="token punctuation">;</span> 

<span class="token keyword">const</span> test<span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">101</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">18</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">getOfLIS</span><span class="token punctuation">(</span>test<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [2,3,4,18]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="vue3-dom-diff\u7B97\u6CD5" tabindex="-1"><a class="header-anchor" href="#vue3-dom-diff\u7B97\u6CD5" aria-hidden="true">#</a> vue3 DOM DIFF\u7B97\u6CD5</h2><p>vue3\u4E2D\u7684diff\u548C\u4E0A\u9762\u7684\u601D\u60F3\u5176\u5B9E\u662F\u4E00\u6837\u7684\uFF0C\u90FD\u662F\u57FA\u4E8E\u4E0B\u6807\u6765\u7ED1\u5B9A\u6570\u5B57\u5728\u88AB\u63D2\u5165<code>result</code>\u5185\u65F6\u548C\u5176\u524D\u9762\u4E00\u4E2A\u6570\u5B57\u7684\u5173\u7CFB\u3002\u4F46\u662F\u5B83\u770B\u8D77\u6765\u4F1A\u66F4\u52A0\u96BE\u4EE5\u7406\u89E3\uFF0C\u56E0\u4E3A\u5B83\u662F\u901A\u8FC7<code>\u6570\u7EC4\uFF08P\uFF09</code>\u6765\u7ED1\u5B9A\u56DE\u6EAF\u5173\u7CFB\u7684\uFF0C\u8FD4\u56DE\u7684\u662F\u6700\u957F\u9012\u589E\u5B50\u5E8F\u5217\u7684\u4E0B\u6807\u503C</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>  <span class="token keyword">function</span> <span class="token function">getSequence</span><span class="token punctuation">(</span><span class="token parameter">arr</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> p <span class="token operator">=</span> arr<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// \u56DE\u6EAF\u4E13\u7528</span>
    <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>
    <span class="token keyword">let</span> i<span class="token punctuation">,</span> j<span class="token punctuation">,</span> u<span class="token punctuation">,</span> v<span class="token punctuation">,</span> c
    <span class="token keyword">const</span> len <span class="token operator">=</span> arr<span class="token punctuation">.</span>length
    <span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> len<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> arrI <span class="token operator">=</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span>
      <span class="token comment">// \u6392\u9664\u4E86\u7B49\u4E8E0\u7684\u60C5\u51B5\uFF0C\u539F\u56E0\u662F0\u5E76\u4E0D\u4EE3\u8868\u4EFB\u4F55dom\u5143\u7D20\uFF0C\u53EA\u662F\u7528\u6765\u505A\u5360\u4F4D\u7684</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>arrI <span class="token operator">!==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        j <span class="token operator">=</span> result<span class="token punctuation">[</span>result<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span>
        <span class="token comment">// \u5F53\u524D\u503C\u5927\u4E8E\u5B50\u5E8F\u5217\u6700\u540E\u4E00\u9879</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">&lt;</span> arrI<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token comment">// p\u5185\u5B58\u50A8\u5F53\u524D\u503C\u7684\u524D\u4E00\u4F4D\u4E0B\u6807</span>
          p<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> j
          <span class="token comment">// \u5B58\u50A8\u5F53\u524D\u503C\u7684\u4E0B\u6807</span>
          result<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>
          <span class="token keyword">continue</span>
        <span class="token punctuation">}</span>
        u <span class="token operator">=</span> <span class="token number">0</span>
        v <span class="token operator">=</span> result<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span>
        <span class="token comment">// \u5F53\u524D\u6570\u503C\u5C0F\u4E8E\u5B50\u5E8F\u5217\u6700\u540E\u4E00\u9879\u65F6\uFF0C\u4F7F\u7528\u4E8C\u5206\u6CD5\u627E\u5230\u7B2C\u4E00\u4E2A\u5927\u4E8E\u5F53\u524D\u6570\u503C\u7684\u4E0B\u6807</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>u <span class="token operator">&lt;</span> v<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          c <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>u <span class="token operator">+</span> v<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">|</span> <span class="token number">0</span>
          <span class="token keyword">if</span> <span class="token punctuation">(</span>arr<span class="token punctuation">[</span>result<span class="token punctuation">[</span>c<span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">&lt;</span> arrI<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            u <span class="token operator">=</span> c <span class="token operator">+</span> <span class="token number">1</span>
          <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            v <span class="token operator">=</span> c
          <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>arrI <span class="token operator">&lt;</span> arr<span class="token punctuation">[</span>result<span class="token punctuation">[</span>u<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token comment">// \u7B2C\u4E00\u4F4D\u4E0D\u9700\u8981\u64CD\u4F5C\uFF0C\u4E00\u4F4D\u5B83\u6CA1\u6709\u524D\u4E00\u9879</span>
          <span class="token keyword">if</span> <span class="token punctuation">(</span>u <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// p\u5185\u5B58\u50A8\u627E\u5230\u7684\u4E0B\u6807\u7684\u524D\u4E00\u4F4D</span>
            p<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> result<span class="token punctuation">[</span>u <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span>
          <span class="token punctuation">}</span>
          <span class="token comment">// \u627E\u5230\u4E0B\u6807\uFF0C\u76F4\u63A5\u66FF\u6362result\u4E2D\u7684\u6570\u503C</span>
          result<span class="token punctuation">[</span>u<span class="token punctuation">]</span> <span class="token operator">=</span> i
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    u <span class="token operator">=</span> result<span class="token punctuation">.</span>length
    v <span class="token operator">=</span> result<span class="token punctuation">[</span>u <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span>
    <span class="token comment">// \u56DE\u6EAF\uFF0C\u4ECE\u6700\u540E\u4E00\u4F4D\u5F00\u59CB\uFF0C\u5C06result\u5168\u90E8\u8986\u76D6\uFF0C</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span>u<span class="token operator">--</span> <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      result<span class="token punctuation">[</span>u<span class="token punctuation">]</span> <span class="token operator">=</span> v
      v <span class="token operator">=</span> p<span class="token punctuation">[</span>v<span class="token punctuation">]</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> result
  <span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u53C2\u8003" tabindex="-1"><a class="header-anchor" href="#\u53C2\u8003" aria-hidden="true">#</a> \u53C2\u8003</h2>`,33),f={href:"https://segmentfault.com/a/1190000025170079",target:"_blank",rel:"noopener noreferrer"},g=s("Vue3 DOM Diff \u6838\u5FC3\u7B97\u6CD5\u89E3\u6790"),y=n("br",null,null,-1),w={href:"https://zh.wikipedia.org/wiki/%E6%9C%80%E9%95%BF%E9%80%92%E5%A2%9E%E5%AD%90%E5%BA%8F%E5%88%97",target:"_blank",rel:"noopener noreferrer"},_=s("wikipedia-\u6700\u957F\u9012\u589E\u5B50\u5E8F\u5217");function j(x,I){const a=e("ExternalLinkIcon");return o(),c("div",null,[i,r,n("h2",k,[d,m,n("a",v,[b,p(a)])]),h,n("p",null,[n("a",f,[g,p(a)]),y,n("a",w,[_,p(a)])])])}const O=t(u,[["render",j],["__file","diff.html.vue"]]);export{O as default};
