import{_ as n,o as s,c as a,e as p}from"./app.fded88d1.js";const t={},o=p(`<h1 id="\u6392\u5E8F\u7B97\u6CD5\u603B\u7ED3" tabindex="-1"><a class="header-anchor" href="#\u6392\u5E8F\u7B97\u6CD5\u603B\u7ED3" aria-hidden="true">#</a> \u6392\u5E8F\u7B97\u6CD5\u603B\u7ED3</h1><h2 id="\u6570\u7EC4\u771F\u6B63\u4E71\u5E8F\u7684\u5B9E\u73B0" tabindex="-1"><a class="header-anchor" href="#\u6570\u7EC4\u771F\u6B63\u4E71\u5E8F\u7684\u5B9E\u73B0" aria-hidden="true">#</a> \u6570\u7EC4\u771F\u6B63\u4E71\u5E8F\u7684\u5B9E\u73B0</h2><p>\u5E94\u7528\u7ECF\u5178\u7684<code>Fisher\u2013Yates</code>\u6D17\u724C\u7B97\u6CD5\uFF1B\u5B9E\u73B0\u601D\u8DEF\uFF1A\u6570\u7EC4\u4ECE\u540E\u5411\u524D\u904D\u5386\uFF0C\u7136\u540E\u5C06\u5F53\u524D\u5143\u7D20\u4E0E\u524D\u9762\uFF08\u5305\u62EC\u81EA\u8EAB\uFF09\u968F\u673A\u4F4D\u7F6E\u7684\u6570\u8FDB\u884C\u4EA4\u6362</p><blockquote><p>v8 \u5728\u5904\u7406 sort \u65B9\u6CD5\u65F6\uFF0C\u4F7F\u7528\u4E86\u63D2\u5165\u6392\u5E8F\u548C\u5FEB\u6392\u4E24\u79CD\u65B9\u6848\u3002\u5F53\u76EE\u6807\u6570\u7EC4\u957F\u5EA6\u5C0F\u4E8E10\u65F6\uFF0C\u4F7F\u7528\u63D2\u5165\u6392\u5E8F\uFF1B\u53CD\u4E4B\uFF0C\u4F7F\u7528\u5FEB\u6392\u3002</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">shuffle</span><span class="token punctuation">(</span><span class="token parameter">arr</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> m <span class="token operator">=</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
  <span class="token keyword">while</span> <span class="token punctuation">(</span>m <span class="token operator">&gt;</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">let</span> index <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> m<span class="token operator">--</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">[</span>arr<span class="token punctuation">[</span>m<span class="token punctuation">]</span> <span class="token punctuation">,</span> arr<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>arr<span class="token punctuation">[</span>index<span class="token punctuation">]</span> <span class="token punctuation">,</span> arr<span class="token punctuation">[</span>m<span class="token punctuation">]</span><span class="token punctuation">]</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> arr<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u5192\u6CE1\u6392\u5E8F" tabindex="-1"><a class="header-anchor" href="#\u5192\u6CE1\u6392\u5E8F" aria-hidden="true">#</a> \u5192\u6CE1\u6392\u5E8F</h2><p>\u5B9E\u73B0\u601D\u8DEF\uFF1A\u5FAA\u73AF\u6570\u7EC4\uFF0C\u6BD4\u8F83\u5F53\u524D\u5143\u7D20\u4E0E\u4E0B\u4E00\u4E2A\u5143\u7D20\uFF1B\u5982\u679C\u5F53\u524D\u5143\u7D20\u5927\u4E8E\u4E0B\u4E00\u4E2A\u5143\u7D20\uFF0C\u5219\u5411\u4E0A\u5192\u6CE1(\u4EA4\u6362\u4F4D\u7F6E);\u8FD9\u6837\u4E00\u6B21\u5FAA\u73AF\u4E0B\u6765\u540E\uFF0C\u6700\u540E\u4E00\u4E2A\u6570\u5C31\u662F\u6574\u4E2A\u6570\u7EC4\u6700\u5927\u7684\uFF1B\u4E0B\u6B21\u5FAA\u73AF\u5FAA\u73AF\u4E0A\u9762\u7684\u64CD\u4F5C\uFF1B<br> \u590D\u6742\u5EA6\uFF1A <code>O(n2)</code></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">bubbleSort</span><span class="token punctuation">(</span><span class="token parameter">arr</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> len <span class="token operator">=</span> arr<span class="token punctuation">.</span>length<span class="token operator">-</span><span class="token number">1</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> len<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>j <span class="token operator">&lt;</span> len<span class="token operator">-</span>i<span class="token punctuation">;</span>j<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span> 
      <span class="token keyword">if</span> <span class="token punctuation">(</span>arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">&gt;</span> arr<span class="token punctuation">[</span>j<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token punctuation">[</span>arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">,</span> arr<span class="token punctuation">[</span>j<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>arr<span class="token punctuation">[</span>j<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">]</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> arr
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u5192\u6CE1\u6392\u5E8F\u7684\u4F18\u5316\u7248" tabindex="-1"><a class="header-anchor" href="#\u5192\u6CE1\u6392\u5E8F\u7684\u4F18\u5316\u7248" aria-hidden="true">#</a> \u5192\u6CE1\u6392\u5E8F\u7684\u4F18\u5316\u7248</h2><p>\u4F18\u5316\u601D\u8DEF\uFF1A\u8BBE\u7F6E\u53D8\u91CF<code>pos</code>\u7528\u6765\u8BB0\u5F55\u6BCF\u8D9F\u5FAA\u73AF\u4E2D\u6700\u540E\u4E00\u6B21\u8FDB\u884C\u4EA4\u6362\u7684\u4F4D\u7F6E\uFF0C\u7531\u4E8E<code>pos</code>\u4E4B\u540E\u7684\u5143\u7D20\u90FD\u6CA1\u6709\u8FDB\u884C\u8FC7\u4EA4\u6362\uFF0C\u5219\u8BF4\u660E<code>pos</code>\u4E4B\u540E\u7684\u5143\u7D20\u662F\u5DF2\u7ECF\u6392\u5E8F\u597D\u7684\uFF0C\u4E0B\u4E00\u6B21\u5FAA\u73AF\u662F\u626B\u63CF\u5230<code>pos</code>\u4F4D\u7F6E\u5373\u53EF</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">bubbleSort1</span><span class="token punctuation">(</span><span class="token parameter">arr</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">let</span> i <span class="token operator">=</span> arr<span class="token punctuation">.</span>length<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span> <span class="token comment">//  \u521D\u59CB\u65F6,\u6700\u540E\u4F4D\u7F6E\u4FDD\u6301\u4E0D\u53D8  </span>
	<span class="token keyword">while</span> <span class="token punctuation">(</span>i <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">let</span> pos <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token comment">//\u6BCF\u8D9F\u5F00\u59CB\u65F6,\u65E0\u8BB0\u5F55\u4EA4\u6362</span>
		<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>j <span class="token operator">&lt;</span> i<span class="token punctuation">;</span>j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span>arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">&gt;</span> arr<span class="token punctuation">[</span>j<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token punctuation">[</span>arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">,</span> arr<span class="token punctuation">[</span>j<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>arr<span class="token punctuation">[</span>j<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">]</span> 
        pos <span class="token operator">=</span> j<span class="token punctuation">;</span><span class="token comment">//\u8BB0\u5F55\u6700\u540E\u4EA4\u6362\u7684\u4F4D\u7F6E  </span>
			<span class="token punctuation">}</span>			
		<span class="token punctuation">}</span>
		i <span class="token operator">=</span> pos<span class="token punctuation">;</span><span class="token comment">//\u4E3A\u4E0B\u4E00\u8D9F\u6392\u5E8F\u4F5C\u51C6\u5907</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">return</span> arr<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u63D2\u5165\u6392\u5E8F" tabindex="-1"><a class="header-anchor" href="#\u63D2\u5165\u6392\u5E8F" aria-hidden="true">#</a> \u63D2\u5165\u6392\u5E8F</h2><p>\u5B9E\u73B0\u601D\u8DEF\uFF1A\u5C06\u5DE6\u4FA7\u770B\u6210\u6709\u5E8F\u7684\u5E8F\u5217\uFF0C\u6BCF\u6B21\u904D\u5386\u7684\u65F6\u5019\uFF0C\u5C06\u5143\u7D20\u63D2\u5165\u5230\u8FD9\u4E2A\u5E8F\u5217\u7684\u5BF9\u5E94\u4F4D\u7F6E\uFF1B\u6BCF\u6B21\u63D2\u5165\u7684\u65F6\u5019\u4ECE\u53F3\u4FA7\u5F00\u59CB\u6BD4\u8F83\uFF1B\u82E5\u6BD4\u8F83\u7684\u6570\u8F83\u5927\uFF0C\u5219\u5411\u540E\u79FB\uFF1B<br> \u590D\u6742\u5EA6\uFF1A <code>O(n2)</code></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">insertionSort</span><span class="token punctuation">(</span><span class="token parameter">arr</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
  <span class="token keyword">const</span> len <span class="token operator">=</span> arr<span class="token punctuation">.</span>length
  <span class="token keyword">var</span> prevIndex<span class="token punctuation">,</span> cur<span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>i <span class="token operator">&lt;</span> len<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    prevIndex <span class="token operator">=</span> i<span class="token operator">-</span><span class="token number">1</span>
    cur <span class="token operator">=</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span>prevIndex <span class="token operator">&gt;=</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> arr<span class="token punctuation">[</span>prevIndex<span class="token punctuation">]</span> <span class="token operator">&gt;</span> cur<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      arr<span class="token punctuation">[</span>prevIndex<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> arr<span class="token punctuation">[</span>prevIndex<span class="token punctuation">]</span>
      prevIndex<span class="token operator">--</span>
    <span class="token punctuation">}</span>
    arr<span class="token punctuation">[</span>prevIndex<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> cur
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> arr
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u9009\u62E9\u6392\u5E8F" tabindex="-1"><a class="header-anchor" href="#\u9009\u62E9\u6392\u5E8F" aria-hidden="true">#</a> \u9009\u62E9\u6392\u5E8F</h2><p>\u5B9E\u73B0\u601D\u8DEF\uFF1A\u6BCF\u6B21\u5FAA\u73AF\u9009\u62E9\u6700\u5C0F\u7684\u6570\u5B57\u653E\u5728\u524D\u9762\u6709\u5E8F\u5E8F\u5217\u7684\u672B\u5C3E\uFF1B<br> \u590D\u6742\u5EA6\uFF1A <code>O(n2)</code></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">selectionSort</span><span class="token punctuation">(</span><span class="token parameter">array</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> array<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> minIndex <span class="token operator">=</span> i<span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> j <span class="token operator">=</span> i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> array<span class="token punctuation">.</span>length<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>array<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">&lt;</span> array<span class="token punctuation">[</span>minIndex<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        minIndex <span class="token operator">=</span> j<span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token punctuation">[</span>array<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> array<span class="token punctuation">[</span>minIndex<span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>array<span class="token punctuation">[</span>minIndex<span class="token punctuation">]</span><span class="token punctuation">,</span> array<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u5FEB\u901F\u6392\u5E8F" tabindex="-1"><a class="header-anchor" href="#\u5FEB\u901F\u6392\u5E8F" aria-hidden="true">#</a> \u5FEB\u901F\u6392\u5E8F</h2><p>\u5B9E\u73B0\u601D\u8DEF\uFF1A\u901A\u8FC7\u4E00\u8D9F\u904D\u5386\u90FD\u5C06\u6570\u636E\u5206\u4E3A\u4E24\u90E8\u5206\uFF0C\u5176\u4E2D\u4E00\u90E8\u5206\u7684\u6240\u6709\u6570\u636E\u6BD4\u53E6\u4E00\u90E8\u5206\u7684\u6240\u6709\u6570\u636E\u5C0F\uFF0C\u518D\u5C06\u4E24\u90E8\u5206\u6570\u636E\u6309\u524D\u9762\u6B65\u9AA4\u9012\u5F52\uFF0C\u6700\u7EC8\u4F7F\u6574\u4E2A\u6570\u636E\u53D8\u6210\u6709\u5E8F\u7684\u5E8F\u5217\uFF1B<br> \u590D\u6742\u5EA6\uFF1A \u5E73\u5747<code>O(nlogn)</code>\uFF0C\u6700\u574F<code>O(n2)</code>\uFF0C\u5B9E\u9645\u4E0A\u5927\u591A\u6570\u60C5\u51B5\u4E0B\u5C0F\u4E8E<code>O(nlogn)</code></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">quickSort</span><span class="token punctuation">(</span><span class="token parameter">array</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>array<span class="token punctuation">.</span>length <span class="token operator">&lt;=</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> array<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">const</span> target <span class="token operator">=</span> array<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> left <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> right <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> array<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>array<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&lt;</span> target<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      left<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>array<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      right<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>array<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> <span class="token function">quickSort</span><span class="token punctuation">(</span>left<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span><span class="token punctuation">[</span>target<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token function">quickSort</span><span class="token punctuation">(</span>right<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u5FEB\u901F\u6392\u5E8F\u7684\u4F18\u5316\u7248\u672C" tabindex="-1"><a class="header-anchor" href="#\u5FEB\u901F\u6392\u5E8F\u7684\u4F18\u5316\u7248\u672C" aria-hidden="true">#</a> \u5FEB\u901F\u6392\u5E8F\u7684\u4F18\u5316\u7248\u672C</h2><p>\u539F \u56E0: \u5982\u679C\u6570\u636E\u539F\u6765\u5C31\u662F\u6709\u5E8F\u7684\u6216\u8005\u63A5\u8FD1\u6709\u5E8F\u7684\uFF0C\u6BCF\u6B21\u5206\u533A\u70B9\u90FD\u9009\u62E9\u6700\u540E\u4E00\u4E2A\u6570 \u636E\uFF0C\u90A3\u5FEB\u901F\u6392\u5E8F\u7B97\u6CD5\u5C31\u4F1A\u53D8\u5F97\u975E\u5E38\u7CDF\u7CD5\uFF0C\u65F6\u95F4\u590D\u6742\u5EA6\u5C31\u4F1A\u9000\u5316\u4E3AO(n2);<br> \u5B9E\u73B0\u601D\u8DEF:</p><ul><li>\u4E09\u6570\u5B57\u53D6\u4E2D,\u5982\u679C\u6570\u636E\u7279\u522B\u591A,\u53EF\u8003\u8651\u4E94\u6570\u6216\u5341\u6570\u53D6\u4E2D\u7B49</li><li>\u968F\u673A\u6CD5</li></ul><h2 id="\u5F52\u5E76\u6392\u5E8F" tabindex="-1"><a class="header-anchor" href="#\u5F52\u5E76\u6392\u5E8F" aria-hidden="true">#</a> \u5F52\u5E76\u6392\u5E8F</h2><p>\u5B9E\u73B0\u601D\u8DEF\uFF1A\u5176\u662F\u5EFA\u7ACB\u5728\u5F52\u5E76\u64CD\u4F5C\u4E0A\u7684\u4E00\u79CD\u6392\u5E8F\u7B97\u6CD5\uFF0C\u8BE5\u7B97\u6CD5\u662F\u91C7\u7528\u5206\u6CBB\u6CD5\uFF08Divide and Conquer\uFF09\u7684\u4E00\u4E2A\u5178\u578B\u7684\u5E94\u7528\uFF0C\u628A\u5F85\u6392\u5E8F\u5E8F\u5217\u5206\u4E3A\u82E5\u5E72\u4E2A\u5B50\u5E8F\u5217\uFF0C\u6BCF\u4E2A\u5B50\u5E8F\u5217\u662F\u6709\u5E8F\u7684\u3002\u7136\u540E\u518D\u628A\u6709\u5E8F\u5B50\u5E8F\u5217\u5408\u5E76\u4E3A\u6574\u4F53\u6709\u5E8F\u5E8F\u5217\uFF1B<br> \u590D\u6742\u5EA6\uFF1A <code>O(nlogn)</code></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">merge</span><span class="token punctuation">(</span><span class="token parameter">leftArr<span class="token punctuation">,</span> rightArr</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  
    <span class="token keyword">var</span> result <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>  
    <span class="token keyword">while</span> <span class="token punctuation">(</span>leftArr<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> rightArr<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  
      <span class="token keyword">if</span> <span class="token punctuation">(</span>leftArr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">&lt;</span> rightArr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>  
        result<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>leftArr<span class="token punctuation">.</span><span class="token function">shift</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//\u628A\u6700\u5C0F\u7684\u6700\u5148\u53D6\u51FA\uFF0C\u653E\u5230\u7ED3\u679C\u96C6\u4E2D   </span>
      <span class="token keyword">else</span>   
        result<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>rightArr<span class="token punctuation">.</span><span class="token function">shift</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
    <span class="token punctuation">}</span>   
    <span class="token keyword">return</span> result<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>leftArr<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>rightArr<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//\u5269\u4E0B\u7684\u5C31\u662F\u5408\u5E76\uFF0C\u8FD9\u6837\u5C31\u6392\u597D\u5E8F\u4E86  </span>
<span class="token punctuation">}</span>  

<span class="token keyword">function</span> <span class="token function">mergeSort</span><span class="token punctuation">(</span><span class="token parameter">array</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  
    <span class="token keyword">if</span> <span class="token punctuation">(</span>array<span class="token punctuation">.</span>length <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token keyword">return</span> array<span class="token punctuation">;</span>  
    <span class="token keyword">var</span> middle <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>array<span class="token punctuation">.</span>length <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token comment">//\u6C42\u51FA\u4E2D\u70B9  </span>
    <span class="token keyword">var</span> left <span class="token operator">=</span> array<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> middle<span class="token punctuation">)</span><span class="token punctuation">;</span>               <span class="token comment">//\u5206\u5272\u6570\u7EC4  </span>
    <span class="token keyword">var</span> right <span class="token operator">=</span> array<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span>middle<span class="token punctuation">)</span><span class="token punctuation">;</span>  
    <span class="token keyword">return</span> <span class="token function">merge</span><span class="token punctuation">(</span><span class="token function">mergeSort</span><span class="token punctuation">(</span>left<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">mergeSort</span><span class="token punctuation">(</span>right<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//\u9012\u5F52\u5408\u5E76\u4E0E\u6392\u5E8F  </span>
<span class="token punctuation">}</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,26),e=[o];function c(u,l){return s(),a("div",null,e)}const r=n(t,[["render",c],["__file","sort.html.vue"]]);export{r as default};
